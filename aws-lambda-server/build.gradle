

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins{
    id "com.github.rodm.teamcity-server" version "1.4.1"
}

dependencies {
    implementation project(':aws-lambda-common')
    implementation project(':aws-lambda-function-resolvers')


    compileOnly "jetbrains.buildServer.util:amazon-util:${amazonUtilVersion}"
    testImplementation "jetbrains.buildServer.util:amazon-util:${amazonUtilVersion}"
    implementation 'commons-validator:commons-validator:1.7'
    implementation 'com.amazonaws:aws-java-sdk-iam:1.12.196'
    implementation 'com.amazonaws:aws-java-sdk-lambda:1.12.199'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.2'

    agent project(path: ':aws-lambda-agent', configuration: 'plugin')
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.1"

    compileOnly "org.jetbrains.teamcity.internal:server:${teamcityVersion}"
    compileOnly "org.jetbrains.teamcity:oauth:${teamcityVersion}"
    testImplementation "org.jetbrains.teamcity:oauth:${teamcityVersion}"
    compileOnly "org.jetbrains.teamcity.internal:web:${teamcityVersion}"
    testImplementation "org.jetbrains.teamcity.internal:web:${teamcityVersion}"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

teamcity {
    server {
        descriptor = file("$rootDir/teamcity-plugin.xml")
        tokens = [Plugin_Version: 'SNAPSHOT-' + new Date().format('yyyyMMddHHmm')]

        environments {
            teamcity {
                homeDir = file(teamcityDir)
                dataDir = file(teamcityDataDir)
                javaHome = file(teamcityJavaHome)
                version = teamcityVersion
            }
        }

        publish {
            channels = ['Beta']
            token = findProperty('jetbrains.token')
        }
    }

    version = teamcityVersion
}

repositories {
    mavenLocal()
    mavenCentral()
}